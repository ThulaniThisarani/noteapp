name: Full CI/CD Pipeline with S3 Deployment

on:
  push:
    branches:
      - main

jobs:
  # 1. Matrix Testing
  test:
    name: Matrix Node.js Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integration

      - name: Run E2E Tests
        run: npm run test:e2e

  # 2. Security Scanning
  security:
    name: Security Scan
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm ci

      - name: Static Code Analysis (SAST)
        run: npm run lint

      - name: Dependency Vulnerability Scan (SCA)
        run: npm audit --audit-level=high

      - name: Enforce Quality Gate
        run: |
          npm audit --json > audit.json
          SEVERITIES=$(jq '.metadata.vulnerabilities | to_entries | map(select(.value > 0 and .key != "low")) | length' audit.json)
          if [ "$SEVERITIES" -gt 0 ]; then
            echo "‚ùå Security vulnerabilities found."
            exit 1
          fi

  # 3. Build and Cache Artifacts
  build:
    name: Build and Cache Artifacts
    needs: [test, security]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Cache node_modules and dist
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # 4. Deploy to S3
  deploy:
    name: Upload Website to S3
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
